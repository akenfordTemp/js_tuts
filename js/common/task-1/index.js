/*
1. Как подключить js, css к документу (html)? Плюсы, минусы разных способов?
 */

js файл можно подключить двумя способами:
-Первый способ это создание отдельного файла например "script.js" и поключение его в файле "index.html"
С помощью пути к файлу "script.js" , который указывается вот так:
    <body>
        <script src="path/to/your/script.js"></script>
    </body>
-Второй способ можно включить JavaScript-код непосредственно в теги <script> в HTML-файле:
<body>
<script>
    alert("Hello, this is JavaScript!");
</script>
</body>
Оба метода соединят JavaScript-код с HTML-файлом, и JavaScript-код будет выполняться при загрузке HTML-страницы в браузер.

    Преимущества использования внешнего JavaScript-файла первый способ:
    -Модульность и возможность повторного использования: Использование внешних файлов позволяет отделить код JavaScript от HTML, что делает его более модульным и удобным для поддержки.Один и тот же сценарий можно повторно использовать на нескольких HTML-страницах, что способствует многократному использованию кода.
    -Кэширование: Когда браузер загружает веб-страницу, он кэширует внешние файлы JavaScript. Если один и тот же файл используется на нескольких страницах, браузеру необходимо загрузить его только один раз, что приводит к ускорению загрузки последующих страниц.
    -Более чистый HTML: Благодаря хранению JavaScript в отдельных файлах HTML-код становится чище, его легче читать и понимать, поскольку в нем нет больших блоков JavaScript, расположенных в ряд с HTML-элементами.
    -Асинхронная загрузка: Для асинхронной загрузки файла JavaScript можно использовать атрибут async или defer в теге <script>, что позволяет повысить производительность загрузки страницы.

    Недостатки использования внешнего JavaScript-файла:
    -Дополнительные HTTP-запросы: Каждый внешний файл приводит к дополнительному HTTP-запросу, что может несколько увеличить время загрузки страницы, особенно если у вас много JavaScript-файлов.
    -Зависимость от сети: Если сетевое соединение пользователя медленное или нестабильное, загрузка внешних JavaScript-файлов может занять больше времени, что может повлиять на функциональность сайта.

    Преимущества использования встроенного JavaScript второй способ:

    -Немедленное выполнение: При использовании inline JavaScript код выполняется сразу же при загрузке страницы, что может быть полезно для решения некоторых простых и срочных задач.
    -Меньше управления файлами: не нужно беспокоиться об управлении дополнительным внешним файлом, поскольку код находится непосредственно в HTML-файле.

    Недостатки использования inline JavaScript:

    -Дублирование кода: Если на нескольких страницах используется один и тот же код JavaScript, то в итоге он будет дублироваться, что приведет к проблемам с обслуживанием в случае необходимости внесения изменений.
    -Грязность HTML: Размещение JavaScript непосредственно в HTML-файле может сделать его более беспорядочным и трудным для чтения, особенно если в нем много кода.
    -Снижение модульности: Встроенный JavaScript может сделать код менее модульным, что затрудняет его организацию и сопровождение по мере роста проекта.
    -Проблемы с кэшированием: Поскольку код является встроенным, браузер не может кэшировать его отдельно, что может привести к замедлению загрузки страницы для повторных посетителей.

CSS также можно подлючать двумя способами:

    -Первый способ это создание отдельного файла например "style.css" и поключение его в файле "index.html"
     С помощью пути к файлу "style.css" , который указывается вот так:
    <link rel="stylesheet" type="text/css" href="path/to/your/styles.css">
    -Второй способ можно писать CSS-код непосредственно внутри HTML-файла с помощью тега <style> или встраиваемых стилей.
        Оба метода позволяют применять правила CSS непосредственно к определенным элементам HTML без использования внешнего CSS-файла.

        <html>
        <head>
            <title>Your HTML Page</title>
            <style>
                /* CSS rules go here */
                body {
                background-color: #f0f0f0;
                font-family: Arial, sans-serif;
            }

                h1 {
                color: blue;
            }

                p {
                font-size: 16px;
            }
            </style>
        </head>
        <body>
        <!-- Your HTML content goes here -->
        <h1>Hello, this is a heading</h1>
        <p>This is a paragraph with some text.</p>
        </body>
        </html>

        Использование встроенных стилей:
        Встроенные стили применяются непосредственно к отдельным HTML-элементам с помощью атрибута style:

        <html>
        <body>
        <!-- Your HTML content goes here -->
        <h1 style="color: blue;">Hello, this is a heading</h1>
        <p style="font-size: 16px;">This is a paragraph with some text.</p>
        </body>
        </html>

        Использование встроенного CSS возможно,но считается менее удобным для сопровождения и сложным для управления по мере роста проекта.
        Лучше вынести стили CSS в отдельный внешний файл, используя метод <link>